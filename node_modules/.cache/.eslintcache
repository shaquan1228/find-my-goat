[{"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/index.js":"1","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/App.js":"2","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/config/routes.js":"3","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/config/store.js":"4","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/pages/Template.js":"5","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/pages/TestPage.js":"6","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/pages/Login.js":"7","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/navigation/NavigationBar.js":"8","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/navigation/UserMenu.js":"9","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/navigation/SearchBar.js":"10","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/login/ReturningUser.js":"11","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/login/JoiningUser.js":"12","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/services/hooks/useLocalStorage.js":"13","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/services/databases/userInfo.js":"14","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/services/firestoreConfig.js":"15"},{"size":179,"mtime":1634610167363,"results":"16","hashOfConfig":"17"},{"size":120,"mtime":1632440771714,"results":"18","hashOfConfig":"17"},{"size":1676,"mtime":1634610242367,"results":"19","hashOfConfig":"17"},{"size":2526,"mtime":1634610242368,"results":"20","hashOfConfig":"17"},{"size":134,"mtime":1634610167361,"results":"21","hashOfConfig":"17"},{"size":128,"mtime":1634610167361,"results":"22","hashOfConfig":"17"},{"size":1842,"mtime":1634610242367,"results":"23","hashOfConfig":"17"},{"size":1176,"mtime":1634610242366,"results":"24","hashOfConfig":"17"},{"size":1651,"mtime":1634610242366,"results":"25","hashOfConfig":"17"},{"size":765,"mtime":1634610167360,"results":"26","hashOfConfig":"17"},{"size":2574,"mtime":1634610552000,"results":"27","hashOfConfig":"17"},{"size":3444,"mtime":1634610167358,"results":"28","hashOfConfig":"17"},{"size":1384,"mtime":1634610242369,"results":"29","hashOfConfig":"17"},{"size":1808,"mtime":1634610242368,"results":"30","hashOfConfig":"17"},{"size":503,"mtime":1634610559481,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1b4c487",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/index.js",[],["70","71"],"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/App.js",[],"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/config/routes.js",["72"],"import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport firestoreConfig from '../services/firestoreConfig.js';\n\n//TODO: Remove App and Template before deployment. These are just tests to prove\n// that routing works.\nimport TestPage from '../business/pages/TestPage.js';\nimport Template from '../business/pages/Template.js';\nimport NavigationBar from '../business/components/navigation/NavigationBar.js';\nimport Login from '../business/pages/Login.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; //TODO: Move to a new file in config? To allow for more bootstap styling...\nimport { Provider } from \"react-redux\";\nimport store from './store.js';\n\nlet pathComponent2DArray = [\n\n    [\"/\", TestPage, \"exact\"],\n    [\"/test\", Template, null],\n    [\"/login\", Login, null],\n\n]\n\nconst routes = () => (\n\n    <BrowserRouter>\n        <Provider store={store}>\n            {/* TODO: Remove this comment intended to explain a new concept.\n                This Provider helps us pass the store state as props using connect() in react-redux.\n                See UserMenu.js in business/components/navigation for a good example.\n            */}\n            <Route path=\"/\" component={NavigationBar} />\n\n            {pathComponent2DArray.map((pathComponentArray) => {\n\n                return (pathComponentArray[2] === \"exact\"\n                    ? <Route exact path=\"/\"\n                        component={pathComponentArray[1]} />\n                    : <Route path={pathComponentArray[0]}\n                        component={pathComponentArray[1]} />\n                )\n            })}\n\n        </Provider>\n    </BrowserRouter>\n\n);\n\n\n\n\nexport default routes;","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/config/store.js",["73","74"],"// https://redux.js.org/introduction/getting-started\nimport { Form } from 'react-bootstrap';\nimport { createStore } from 'redux';\n\n//TODO: Remove logoURL tester\nconst logoUrl = \"https://s3.getstickerpack.com/storage/uploads/sticker-pack/random-stickers-1/23.png?ef2e3aa79b8296988bd04a93c62c210c\"\n\nvar prevSessionInfo = { sessionID: 0 };\n\n\n// const [loggedIn, setLoggedIn] = useLocalStorage('sessionInfoIsLoggedIn');\n// const [sessionID, setSessionID] = useLocalStorage('sessionInfoID');\n// const [username, setUsername] = useLocalStorage('sessionInfoUsername');\n// const [aviURL, setAviURL] = useLocalStorage('sessionInfoAviURL');\n\n// sessionID: setSessionInfo('sessionInfoID', 999),\n// username: setSessionInfo('sessionInfoUsername', 'testquan'),\n// aviURL: setSessionInfo('sessionInfoAviURL', 'https://pbs.twimg.com/media/Ds6GQkWUUAAyvy6.jpg')\n\ntry {\n    prevSessionInfo = {\n        loggedIn: (localStorage.getItem('sessionInfoIsLoggedIn') === 'true'),\n        //         sessionID: localStorage.getItem('sessionInfoID'),\n        username: localStorage.getItem('sessionInfoUsername'),\n        aviUrl: 'test'\n        //         aviURL: localStorage.getItem('sessionInfoAviURL')\n    }\n}\ncatch (err) {\n\n}\n\nfunction sessionInfoReducer(state = prevSessionInfo, action) {\n    switch (action.type) {\n        case 'log in':\n            return {\n                loggedIn: true,\n                username: action.payload.username,\n                aviURL: 'https://pbs.twimg.com/media/Ds6GQkWUUAAyvy6.jpg'\n            }\n        case 'log out':\n            return {\n                loggedIn: false,\n                username: '',\n                aviURL: null\n\n            }\n        default:\n            return state\n    }\n\n}\n\nlet store = createStore(sessionInfoReducer);\n\n// You can use subscribe() to update the UI in response to state changes.\n// Normally you'd use a view binding library (e.g. React Redux) rather than subscribe() directly.\n// There may be additional use cases where it's helpful to subscribe as well.\n// store.subscribe(() => console.log(store.getState().sessionID))\n\nstore.subscribe(() => {\n    let state = store.getState()\n    if (state.loggedIn === true) {\n        localStorage.setItem('sessionInfoIsLoggedIn', state.loggedIn)\n        localStorage.setItem('sessionInfoUsername', state.username);\n\n    }\n    else { //This else is unneccesarry if i remove the if.\n        localStorage.removeItem('sessionInfoIsLoggedIn');\n        localStorage.removeItem('sessionInfoUsername');\n    }\n\n\n})\n\n\n\nexport default store;\n\n\n","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/pages/Template.js",[],"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/pages/TestPage.js",[],"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/pages/Login.js",["75"],"import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport ReturningUser from '../components/login/ReturningUser.js';\nimport JoiningUser from '../components/login/JoiningUser.js';\n\nimport Stack from 'react-bootstrap/Stack'\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Login(props) {\n    const [loginStatus, setLoginStatus] = useState(false);\n    const [signUpStatus, setSignUpStatus] = useState(false);\n\n    const handleLoginStatusChange = (e) => setLoginStatus(true);\n    const handleSignUpStatusChange = (e) => setSignUpStatus(true);\n\n\n    return (\n        <Container fluid={true}>\n            <Col>\n                <Stack\n                    gap={2}\n                    className=\"login-page align-items-center\">\n\n                    <Button\n                        className=\"row-1\"\n                        variant=\"primary\"\n                        type=\"button\"\n                        onClick={handleLoginStatusChange}>\n                        Log In\n                    </Button>\n\n\n\n                    <Button\n                        className=\"row-2\"\n                        variant=\"primary\"\n                        type=\"button\"\n                        onClick={handleSignUpStatusChange}>\n                        Sign Up\n                    </Button>\n\n                    {/* TODO: Add feedback for users who are logged in. wrap 44 and 45 in ternary checking if user is logged in */}\n                    {loginStatus && <ReturningUser loginStatus={loginStatus} setLoginStatus={setLoginStatus} />}\n                    {signUpStatus && <JoiningUser signUpStatus={signUpStatus} setSignUpStatus={setSignUpStatus} />}\n\n                </Stack>\n\n            </Col>\n        </Container>\n\n    );\n}\n","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/navigation/NavigationBar.js",[],"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/navigation/UserMenu.js",["76","77"],"import { useEffect } from 'react';\n//https://stackoverflow.com/questions/38678255/react-redux-component-does-not-rerender-on-store-state-change\nimport { useSelector, useDispatch } from 'react-redux';\nimport useLocalStorage from '../../../services/hooks/useLocalStorage.js'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport NavDropdown from 'react-bootstrap/NavDropdown'\n\nfunction UserMenu(props) {\n    props = useSelector((state) => ({ loggedIn: state.loggedIn, username: state.username, aviURL: state.aviURL }))\n    const dispatch = useDispatch();\n    const handleLogout = () => dispatch({ type: 'log out' });\n\n\n    return (\n        <Container>\n\n            <Row className=\"align-items-end\">\n\n                <Col xs={4} md={6}>\n                    {props.loggedIn === true && ('Welcome, ' + props.username)}\n                </Col>\n                <Col xs={8} md={6}>\n\n                    {props.loggedIn === true && (\n                        <NavDropdown\n                            title={\n                                <Image\n                                    rounded={true}\n                                    thumbnail={true}\n                                    src={props.aviURL} />\n                            }>\n\n                            <NavDropdown.Item className=\"dropdown-toggle nav-link\" onClick={handleLogout}>Log Out</NavDropdown.Item>\n                        </NavDropdown>\n                    )}\n\n\n                </Col>\n            </Row>\n        </Container>\n\n    )\n}\n\n\nexport default UserMenu;","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/navigation/SearchBar.js",["78","79","80"],"import { useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\n\nexport default function SearchBar(props) {\n    const [searchInput, setSearchInput] = useState('');\n\n    const handleChange = (e) => setSearchInput(e.target.value);\n    const handleSubmit = (e) => null; //TODO: Fetch request from api, go to results page.\n\n    return (\n        //TODO:Add a submit button\n        //TODO: Add autocomplete?\n\n        <InputGroup>\n            <InputGroup.Text id=\"basic-addon1\">Search</InputGroup.Text>\n            <Form.Control\n                onChange={handleChange}\n                placeholder=\"Enter a name or team\" />\n\n        </InputGroup>\n\n\n\n    )\n}","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/login/ReturningUser.js",["81","82","83"],"import { useEffect, useState } from 'react';\nimport useLocalStorage from '../../../services/hooks/useLocalStorage.js'\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { handleDatabaseLogin } from '../../../services/databases/userInfo.js';\n\n\n\nexport default function ReturningUser(props) {\n    let store = useSelector((state) => ({ loggedIn: state.loggedIn }))\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const handleUsernameChange = (e) => setUsername(e.target.value);\n    const handlePasswordChange = (e) => setPassword(e.target.value);\n    const hideModal = () => props.setLoginStatus(false);\n\n    const dispatch = useDispatch();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const fetchData = handleDatabaseLogin(username, password);\n        if (fetchData) {\n            dispatch({\n                type: 'log in',\n                payload: {\n                    username: fetchData.email,\n                    aviURL: 'hi'\n                }\n            });\n        }\n        hideModal();\n    }\n\n\n    return (\n        <Modal show={props.loginStatus} onHide={hideModal}>\n            <Modal.Header closeButton>\n                <Modal.Title>Log In</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group\n                        className=\"\"\n                        controlId=\"formBasicUsername\">\n\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter username\"\n                            onChange={handleUsernameChange} />\n                    </Form.Group>\n\n\n                    <Form.Group\n                        className=\"\"\n                        controlId=\"formBasicPassword\">\n\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter password\"\n                            onChange={handlePasswordChange} />\n                    </Form.Group>\n\n                    <Button\n                        variant=\"primary\"\n                        type=\"submit\" >\n                        Submit\n                    </Button>\n                </Form>\n            </Modal.Body>\n\n        </Modal>\n    )\n\n\n\n}","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/business/components/login/JoiningUser.js",[],"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/services/hooks/useLocalStorage.js",[],"/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/services/databases/userInfo.js",["84","85","86","87","88"],"import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst auth = getAuth();\n/**\n * Checks if username exists in the database.\n * If a user exists in the database, checks if \n * the password provided is a match.\n * @param {String} username \n * @param {String} password \n */\nfunction handleDatabaseLogin(email, password) {\n    let userInfo = {\n\n    }\n\n    signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            // Signed in \n            userInfo.email = userCredential.user;\n\n            // ...\n        })\n        .catch((error) => {\n            alert(\"wrong\")\n            const errorCode = error.code;\n            const errorMessage = error.message;\n        });\n\n    return userInfo;\n\n    // if (username === \"test\" && password === \"1\")\n    //     return 200;\n\n}\n/**\n * Checks if password and passwordConfirmation \n * are the same. If so, checks if the username \n * or email already exists in the database.\n * If not, creates a new user.\n * \n * @param {String} email \n * @param {String} username \n * @param {String} password \n * @param {String} passwordConfirmation \n * \n * @returns 0 in the case of an error, 200 if successful\n */\nfunction handleCreateDatabaseAccount(email, username, password, passwordConfirmation) {\n    //TODO:Should I check if pw and pwConf are the same here or in the business logic?\n    createUserWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            // Signed in \n            const user = userCredential.user;\n            // ...\n        })\n        .catch((error) => {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            // ..\n        });\n\n}\n\n\nexport { handleDatabaseLogin, handleCreateDatabaseAccount };","/Users/davidguadalupe/Desktop/Programming /FindMyGoat/find-my-goat/src/services/firestoreConfig.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":23},{"ruleId":"93","severity":1,"message":"97","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"98","line":6,"column":7,"nodeType":"95","messageId":"96","endLine":6,"endColumn":14},{"ruleId":"93","severity":1,"message":"99","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"100","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":19},{"ruleId":"93","severity":1,"message":"101","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":23},{"ruleId":"93","severity":1,"message":"102","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":17},{"ruleId":"93","severity":1,"message":"103","line":8,"column":12,"nodeType":"95","messageId":"96","endLine":8,"endColumn":23},{"ruleId":"93","severity":1,"message":"104","line":11,"column":11,"nodeType":"95","messageId":"96","endLine":11,"endColumn":23},{"ruleId":"93","severity":1,"message":"100","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":19},{"ruleId":"93","severity":1,"message":"101","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":23},{"ruleId":"93","severity":1,"message":"105","line":15,"column":9,"nodeType":"95","messageId":"96","endLine":15,"endColumn":14},{"ruleId":"93","severity":1,"message":"106","line":25,"column":19,"nodeType":"95","messageId":"96","endLine":25,"endColumn":28},{"ruleId":"93","severity":1,"message":"107","line":26,"column":19,"nodeType":"95","messageId":"96","endLine":26,"endColumn":31},{"ruleId":"93","severity":1,"message":"108","line":53,"column":19,"nodeType":"95","messageId":"96","endLine":53,"endColumn":23},{"ruleId":"93","severity":1,"message":"106","line":57,"column":19,"nodeType":"95","messageId":"96","endLine":57,"endColumn":28},{"ruleId":"93","severity":1,"message":"107","line":58,"column":19,"nodeType":"95","messageId":"96","endLine":58,"endColumn":31},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'firestoreConfig' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'logoUrl' is assigned a value but never used.","'useSelector' is defined but never used.","'useEffect' is defined but never used.","'useLocalStorage' is defined but never used.","'Container' is defined but never used.","'searchInput' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'store' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]